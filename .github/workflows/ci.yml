name: CI

on:
  push:
    branches: ["**"]          # run on all branches so feature branches get CI
  pull_request:
    branches: ["main"]        # PRs targeting main

jobs:
  build:
    name: build (${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]   # add more later: ["3.10","3.11","3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Cache pre-commit envs
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install dev deps (editable)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install pre-commit

      - name: Lint & hooks (pre-commit)
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Typecheck (mypy)
        run: mypy # [tool.mypy] sets scope to src
          
      - name: Tests
        run: pytest -q

  gate:
    name: gate
    runs-on: ubuntu-latest
    needs: [build]             # waits for ALL matrix copies of 'build'
    steps:
      - run: echo "All matrix builds passed âœ…"
